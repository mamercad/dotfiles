# code: language=shell
# shellcheck shell=bash disable=SC2148
if command -v bat >/dev/null; then; export PAGER="bat"; fi
if command -v fzf >/dev/null; then; export FZF_DEFAULT_OPTS="--border --height 50% --layout=reverse"; fi
if command -v nvim >/dev/null; then export EDITOR="nvim"; fi
if command -v op >/dev/null; then; export SSH_AUTH_SOCK="$HOME/Library/Group\ Containers/2BUA8C4S2C.com.1password/t/agent.sock"; fi
{{- if has .chezmoi.hostname .workHosts }}
export GHE_TOKEN="{{ onepasswordRead "op://Private/Dotfiles/envvar_ghe_token" }}"
export JIRA_API_TOKEN="{{ onepasswordRead "op://Private/Atlassian/jira-cli-api-token" }}"
export LDAP_USERNAME='{{ onepasswordRead "op://Private/LDAP/username" }}'
export LDAP_PASSWORD='{{ onepasswordRead "op://Private/LDAP/password" }}'
export TOWER_PASSWORD='{{ onepasswordRead "op://Private/LDAP/password" }}' # AWX
export TOWER_USERNAME='{{ onepasswordRead "op://Private/LDAP/username" }}' # AWX
export TOWER_VERIFY_SSL='no' # AWX
if command -v bat >/dev/null; then export JIRA_PAGER="bat"; fi
export JIRA_URL="{{ onepasswordRead "op://Private/Atlassian/jira-url" }}"
export KUBECONFIG="{{ onepasswordRead "op://Private/Dotfiles/envvar_kubeconfig" }}"
export VAULT_ADDR="{{ onepasswordRead "op://Private/Dotfiles/envvar_vault_addr" }}"
export VAULT_CACERT="{{ onepasswordRead "op://Private/Dotfiles/envvar_vault_ca_cert" }}"
{{- end }}
export XDG_CONFIG_HOME="${HOME}/.config"
{{- if has .chezmoi.hostname .personalHosts }}
export DIGITALOCEAN_ACCESS_TOKEN="{{ onepasswordRead "op://DigitalOcean/Cloud-FOSS-ansible/token" }}"
export DIGITALOCEAN_TOKEN="{{ onepasswordRead "op://DigitalOcean/Cloud-FOSS-ansible/token" }}"
{{- end }}
{{- if eq .chezmoi.os "darwin" }}
export OBJC_DISABLE_INITIALIZE_FORK_SAFETY="YES"
{{- end }}
